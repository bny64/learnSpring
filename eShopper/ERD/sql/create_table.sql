CREATE TABLE users (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
id VARCHAR(30) UNIQUE NOT NULL, 
password VARCHAR(200) NOT NULL,
email VARCHAR(50) NOT NULL UNIQUE,
address VARCHAR(300),
userType CHAR(1) NOT NULL DEFAULT 'G',
userClass CHAR(1) NOT NULL DEFAULT 'B',
regDate DATETIME DEFAULT NOW(),
PRIMARY KEY(seq)
);

CREATE TABLE topCategory (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
categoryNm VARCHAR(50) NOT NULL UNIQUE,
PRIMARY KEY(seq)
);

CREATE TABLE midCategory (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
parCateSeq INT NOT NULL,
categoryNm VARCHAR(50) NOT NULL,
PRIMARY KEY(seq),
FOREIGN KEY (parCateSeq)
    REFERENCES topCategory(seq) ON DELETE CASCADE
);

CREATE TABLE items (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
itemNm VARCHAR(100) NOT NULL,
itemPrice VARCHAR(50) NOT NULL,
brandNm VARCHAR(50),
content TEXT NOT NULL,
imgPath1 VARCHAR(200),
imgPath2 VARCHAR(200),
imgPath3 VARCHAR(200),
regDate DATETIME DEFAULT NOW(),
topCateSeq INT,
midCateSeq INT,
PRIMARY KEY(seq),
FOREIGN KEY(topCateSeq)
	REFERENCES topCategory(seq) ON DELETE SET NULL,
FOREIGN KEY(midCateSeq)
	REFERENCES midCategory(seq) ON DELETE SET NULL
);

CREATE TABLE wishlist (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
userSeq INT NOT NULL,
itemSeq INT NOT NULL,
PRIMARY KEY(seq),
FOREIGN KEY(userSeq)
	REFERENCES users(seq) ON DELETE CASCADE,
FOREIGN KEY(itemSeq)
	REFERENCES items(seq) ON DELETE CASCADE
);

CREATE TABLE cart (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
userSeq INT NOT NULL,
itemSeq INT NOT NULL,
quantity INT NOT NULL,
regDate DATETIME DEFAULT NOW(),
PRIMARY KEY(seq),
FOREIGN KEY(userSeq)
	REFERENCES users(seq) ON DELETE CASCADE,
FOREIGN KEY(itemSeq)
	REFERENCES items(seq) ON DELETE CASCADE
);

CREATE TABLE comments (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
userSeq INT NOT NULL,
itemSeq INT NOT NULL,
title VARCHAR(100) NOT NULL,
content TEXT NOT NULL,
regDate DATETIME DEFAULT NOW(),
PRIMARY KEY(seq),
FOREIGN KEY(userSeq)
	REFERENCES users(seq) ON DELETE CASCADE,
FOREIGN KEY(itemSeq)
	REFERENCES items(seq) ON DELETE CASCADE
);

CREATE TABLE checkout (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
userSeq INT NOT NULL,
itemSeq INT NOT NULL,
address VARCHAR(200) NOT NULL,
orderStatus CHAR NOT NULL DEFAULT 'A',
transStatus CHAR NOT NULL DEFAULT 'R',
exchangeStatus CHAR NOT NULL DEFAULT 'N',
regDate DATETIME DEFAULT NOW(),
PRIMARY KEY(seq),
FOREIGN KEY(userSeq)
	REFERENCES users(seq) ON DELETE CASCADE,
FOREIGN KEY(itemSeq)
	REFERENCES items(seq) ON DELETE CASCADE
);

CREATE TABLE rating (
seq INT UNIQUE NOT NULL AUTO_INCREMENT,
userSeq INT NOT NULL,
itemSeq INT NOT NULL,
address VARCHAR(200) NOT NULL,
score INT NOT NULL DEFAULT 1,
regDate DATETIME DEFAULT NOW(),
PRIMARY KEY(seq),
FOREIGN KEY(userSeq)
	REFERENCES users(seq) ON DELETE CASCADE,
FOREIGN KEY(itemSeq)
	REFERENCES items(seq) ON DELETE CASCADE
);